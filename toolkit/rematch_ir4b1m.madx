!option, warn,info;
print, text="rematch_ir4b1m";

scale = 23348.89927; ! b rho
sch=0.99; ! maximum strength relative to max strength
scmin := 0.03*7000./nrj; ! minimum is 3%
qtlimit2   := sch*160.0/scale;
qtlimit3   := sch*200.0/scale;
qtlimit4   := sch*125.0/scale;
qtlimit5   := sch*120.0/scale;
qtlimit6   := sch*90.0/scale;

if(on_holdselect==0){ exec,select(4,34,45,b1); };

! never comes in HL
if(on_fixedip==1){
muxip4b1=2.1600 ;betxip4b1 = 172.807960 ;alfxip4b1 =  0.580679 ;
muyip4b1=1.7200 ;betyip4b1 = 230.297901 ;alfyip4b1 = -0.325498 ;
dxip4b1 = 0.0000 ;dpxip4b1 = 0.0000 ;
};

scir1_scv = scxir1;
if (scxir1 > scyir1)
 {
   scir1_scv = scyir1;
 };


maxmuxshift = 1e-10;
maxmuyshift = 1e-10;

maxkchange = 0.001;


value,muxip4b1,betxip4b1,alfxip4b1,muyip4b1,betyip4b1,alfyip4b1,dxip4b1,dpxip4b1;

use,period=lhcb1,range=s.ds.l4.b1/e.ds.r4.b1;

match, sequence=lhcb1, use_macro;

m_ir4b1: macro =
 {

!   print, text="skowron: kqt13.l4b1";
!   value, kqt13.l4b1, qtlimit5;
   
   twiss, sequence=lhcb1, beta0=bir4b1;
   
   refmuxip4b1=table(twiss,e.ds.r4.b1,mux)-eir4b1->mux;
   refmuyip4b1=table(twiss,e.ds.r4.b1,muy)-eir4b1->muy;
   refmuxip4b1_l =table(twiss,IP4,mux);
   refmuyip4b1_l =table(twiss,IP4,muy);
   refmuxip4b1_r =refmuxip4b1-refmuxip4b1_l;
   refmuyip4b1_r =refmuyip4b1-refmuyip4b1_l;
   
   
 };



  constraint, weight=1e1, expr = table(twiss, ip4, dx)  = dxip4b1;
  constraint, weight=1e1, expr = table(twiss, ip4, dpx) = dpxip4b1;


  constraint, weight=1e1, expr = table(twiss, ip4, betx) = betxip4b1;! + 0;
  constraint, weight=1e1, expr = table(twiss, ip4, betx) = betxip4b1;! - 0;
  constraint, weight=1e1, expr = table(twiss, ip4, bety) = betyip4b1;! + 0;
  constraint, weight=1e1, expr = table(twiss, ip4, bety) = betyip4b1;! - 0;


!  constraint, weight=1e1, expr = table(twiss, ip4, alfx) < alfxip4b1 + 0;
!  constraint, weight=1e1, expr = table(twiss, ip4, alfx) > alfxip4b1 - 0;
!  constraint, weight=1e1, expr = table(twiss, ip4, alfy) < alfyip4b1 + 0;
! constraint, weight=1e1, expr = table(twiss, ip4, alfy) > alfyip4b1 - 0;

  constraint,sequence=lhcb1,range=e.ds.r4.b1,alfx=eir4b1->alfx, alfy=eir4b1->alfy;
  constraint,sequence=lhcb1,range=e.ds.r4.b1,betx=eir4b1->betx, bety=eir4b1->bety;
  constraint,sequence=lhcb1,range=e.ds.r4.b1,dx=eir4b1->dx,dpx=eir4b1->dpx;

  constraint, weight=1e3,sequence=lhcb1,range=e.ds.r4.b1,muy=muyip4b1+eir4b1->muy;
  constraint, weight=1e3,sequence=lhcb1,range=e.ds.r4.b1,mux=muxip4b1+eir4b1->mux;

! constraint, weight=1e1, expr = table(twiss, e.ds.r4.b1, mux) < muxip4b1 + eir4b1->mux + maxmuxshift;
! constraint, weight=1e1, expr = table(twiss, e.ds.r4.b1, mux) > muxip4b1 + eir4b1->mux - maxmuxshift;

! constraint, weight=1e1, expr = table(twiss, e.ds.r4.b1, muy) < muyip4b1 + eir4b1->muy + maxmuyshift;
! constraint, weight=1e1, expr = table(twiss, e.ds.r4.b1, muy) > muyip4b1 + eir4b1->muy - maxmuyshift;
  
  

  if (scxir1 > 0.99)
   { 
        !injection constraints
        constraint,sequence=lhcb1, range=mq.12l4.b1,  bety  <  182.5-2.0+2.0 + 100*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mqml.10l4.b1,bety  <  178.5         + 100*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mqml.8l4.b1, bety  <  178.5-0.5     + 100*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mqy.6l4.b1,  bety  <  600           + 200*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mqy.5l4.b1,  betx  <  460-2         + 200*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mqy.5r4.b1,  bety  <  490           + 200*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mqy.6r4.b1,  betx  <  600.          + 200*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mqm.7r4.b1,  bety  <  178.5         + 100*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mqm.9r4.b1,  bety  <  171.5         + 100*(1-scxir1)/(0.2)	 ;
        constraint,sequence=lhcb1, range=mq.11r4.b1,  bety  <  181.8+0.1     + 100*(1-scxir1)/(0.2)    ;
        constraint,sequence=lhcb1, range=mq.12r4.b1,  betx  <  176.5-2.0     + 100*(1-scxir1)/(0.2)    ;
   };

  constraint, weight=1e3, expr= kqt13.l4b1 > -0.995 * qtlimit5; 
  constraint, weight=1e3, expr= kqt12.l4b1 > -0.995 * qtlimit5; 
  constraint, weight=1e3, expr= kqtl11.l4b1 > -0.995 * qtlimit4; 
  constraint, weight=1e3, expr= kq10.l4b1 > -0.995 * qtlimit3; 
  constraint, weight=1e3, expr= kq9.l4b1 > 1.005 * qtlimit3*scmin;
  constraint, weight=1e3, expr= kq8.l4b1 > -0.995 * qtlimit3; 
  constraint, weight=1e3, expr= kq7.l4b1 > 1.005 * qtlimit3*scmin;
  constraint, weight=1e3, expr= kq6.l4b1 > -0.995 * qtlimit2; 
  constraint, weight=1e3, expr= kq5.l4b1 > 1.005 * qtlimit2*scmin;

  constraint, weight=1e3, expr= kq5.r4b1 > -0.995 * qtlimit2; 
  constraint, weight=1e3, expr= kq6.r4b1 > 1.005 * qtlimit2*scmin;
  constraint, weight=1e3, expr= kq7.r4b1 > -0.995 * qtlimit3; 
  constraint, weight=1e3, expr= kq8.r4b1 > 1.005 * qtlimit3*scmin;
  constraint, weight=1e3, expr= kq9.r4b1 > -0.995 * qtlimit3; 
  constraint, weight=1e3, expr= kq10.r4b1 > 1.005 * qtlimit3*scmin;
  constraint, weight=1e3, expr= kqtl11.r4b1 > -0.995 * qtlimit4; 
  constraint, weight=1e3, expr= kqt12.r4b1 > -0.995 * qtlimit5; 
  constraint, weight=1e3, expr= kqt13.r4b1 > -0.995 * qtlimit5; 


  constraint, weight=1e3, expr= kqt13.l4b1 < 0.995 * qtlimit5;
  constraint, weight=1e3, expr= kqt12.l4b1 < 0.995 * qtlimit5;
  constraint, weight=1e3, expr= kqtl11.l4b1 < 0.995 * qtlimit4;
  constraint, weight=1e3, expr= kq10.l4b1 < -1.005 * qtlimit3*scmin;
  constraint, weight=1e3, expr= kq9.l4b1 < 0.995 * qtlimit3;
  constraint, weight=1e3, expr= kq8.l4b1 < -1.005 * qtlimit3*scmin;
  constraint, weight=1e3, expr= kq7.l4b1 < 0.995 * qtlimit3;
  constraint, weight=1e3, expr= kq6.l4b1 < -1.005 * qtlimit2*scmin;
  constraint, weight=1e3, expr= kq5.l4b1 < 0.995 * qtlimit2;

  constraint, weight=1e3, expr= kq5.r4b1 < -1.005 * qtlimit2*scmin;
  constraint, weight=1e3, expr= kq6.r4b1 < 0.995 * qtlimit2;
  constraint, weight=1e3, expr= kq7.r4b1 < -1.005 * qtlimit3*scmin;
  constraint, weight=1e3, expr= kq8.r4b1 < 0.995 * qtlimit3;
  constraint, weight=1e3, expr= kq9.r4b1 < -1.005 * qtlimit3*scmin;
  constraint, weight=1e3, expr= kq10.r4b1 < 0.995 * qtlimit3;
  constraint, weight=1e3, expr= kqtl11.r4b1 < 0.995 * qtlimit4;
  constraint, weight=1e3, expr= kqt12.r4b1 < 0.995 * qtlimit5;
  constraint, weight=1e3, expr= kqt13.r4b1 < 0.995 * qtlimit5;


 vary,name=kqt13.l4b1,  step=1.0E-5, lower=-qtlimit5,       upper= qtlimit5;
 vary,name=kqt12.l4b1,  step=1.0E-5, lower=-qtlimit5,       upper= qtlimit5;
 vary,name=kqtl11.l4b1, step=1.0E-5, lower=-qtlimit4,       upper= qtlimit4;
 vary,name=kq10.l4b1,   step=1.0E-5, lower=-qtlimit3,       upper=-qtlimit3*scmin;
 vary,name=kq9.l4b1,    step=1.0E-5, lower= qtlimit3*scmin, upper= qtlimit3;
 vary,name=kq8.l4b1,    step=1.0E-5, lower=-qtlimit3,       upper=-qtlimit3*scmin;
 vary,name=kq7.l4b1,    step=1.0E-5, lower= qtlimit3*scmin, upper= qtlimit3;
 vary,name=kq6.l4b1,    step=1.0E-5, lower=-qtlimit2,       upper=-qtlimit2*scmin;
 vary,name=kq5.l4b1,    step=1.0E-5, lower= qtlimit2*scmin, upper= qtlimit2;

 vary,name=kq5.r4b1,    step=1.0E-5, lower=-qtlimit2,       upper=-qtlimit2*scmin;
 vary,name=kq6.r4b1,    step=1.0E-5, lower= qtlimit2*scmin, upper= qtlimit2;
 vary,name=kq7.r4b1,    step=1.0E-5, lower=-qtlimit3,       upper=-qtlimit3*scmin;
 vary,name=kq8.r4b1,    step=1.0E-5, lower= qtlimit3*scmin, upper= qtlimit3;
 vary,name=kq9.r4b1,    step=1.0E-5, lower=-qtlimit3,       upper=-qtlimit3*scmin;
 vary,name=kq10.r4b1,   step=1.0E-5, lower= qtlimit3*scmin, upper= qtlimit3;
 vary,name=kqtl11.r4b1, step=1.0E-5, lower=-qtlimit4,       upper= qtlimit4;
 vary,name=kqt12.r4b1,  step=1.0E-5, lower=-qtlimit5,       upper= qtlimit5;
 vary,name=kqt13.r4b1,  step=1.0E-5, lower=-qtlimit5,       upper= qtlimit5;



   constraint, weight=1e-1, expr= abs((ini_kqt13.l4b1  -  kqt13.l4b1 )/kqt13.l4b1) < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kqt12.l4b1  -  kqt12.l4b1 )/kqt12.l4b1) < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kqtl11.l4b1 -  kqtl11.l4b1)/kqtl11.l4b1)< maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq10.l4b1   -  kq10.l4b1  )/kq10.l4b1)  < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq9.l4b1    -  kq9.l4b1   )/kq9.l4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq8.l4b1    -  kq8.l4b1   )/kq8.l4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq7.l4b1    -  kq7.l4b1   )/kq7.l4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq6.l4b1    -  kq6.l4b1   )/kq6.l4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq5.l4b1    -  kq5.l4b1   )/kq5.l4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq5.r4b1    -  kq5.r4b1   )/kq5.r4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq6.r4b1    -  kq6.r4b1   )/kq6.r4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq7.r4b1    -  kq7.r4b1   )/kq7.r4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq8.r4b1    -  kq8.r4b1   )/kq8.r4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq9.r4b1    -  kq9.r4b1   )/kq9.r4b1)   < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kq10.r4b1   -  kq10.r4b1  )/kq10.r4b1)  < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kqtl11.r4b1 -  kqtl11.r4b1)/kqtl11.r4b1)< maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kqt12.r4b1  -  kqt12.r4b1 )/kqt12.r4b1) < maxkchange;
   constraint, weight=1e-1, expr= abs((ini_kqt13.r4b1  -  kqt13.r4b1 )/kqt13.r4b1) < maxkchange;



!  constraint, weight=1e1, expr = refmuyIP4b1_l = muyIP4b1_l;


  
jacobian,calls=40, tolerance=jac_tol, bisec=jac_bisec;

!jacobian,calls=0, tolerance=jac_tol, bisec=jac_bisec;

!lmdif,calls=1000,tolerance=1.e-21;
!simplex,  calls=2000, tolerance=1e-8;
!lmdif,calls=1000,tolerance=1.e-21;

!jacobian,calls=jac_calls, tolerance=jac_tol, bisec=jac_bisec;
!lmdif,calls=1000,tolerance=1.e-21;
!simplex,  calls=2000, tolerance=1e-8;
!lmdif,calls=1000,tolerance=1.e-21;

!jacobian,calls=jac_calls, tolerance=jac_tol, bisec=jac_bisec;
!jacobian,calls=jac_calls, tolerance=jac_tol, bisec=jac_bisec;
!lmdif,calls=1000,tolerance=1.e-21;

!simplex,  calls=1000, tolerance=jac_tol;

endmatch;





exec,mk_irtwiss(4,b1);

value,table(twiss,BPMCS.9L4.B1,betx),table(twiss,BPMCS.7L4.B1,betx);
value,table(twiss,BPMCS.9R4.B1,bety),table(twiss,BPMCS.7R4.B1,bety);
value,table(twiss,MKQA.6L4.B1,betx),table(twiss,MKQA.6L4.B1,bety);
value,table(twiss,BQKH.B6L4.B1,betx),table(twiss,BQKV.6L4.B1,bety);
value,table(twiss,ADTKH.D5L4.B1,betx),table(twiss,ADTKH.C5L4.B1,betx),
      table(twiss,ADTKH.B5L4.B1,betx),table(twiss,ADTKH.A5L4.B1,betx);
value,table(twiss,ADTKV.A5R4.B1,bety),table(twiss,ADTKV.B5R4.B1,bety),
      table(twiss,ADTKV.C5R4.B1,bety),table(twiss,ADTKV.D5R4.B1,bety);

print, text="Match end for IR4B1";

tarir4b1=tar;
value,kqt13.l4b1,kqt12.l4b1,kqtl11.l4b1,kq10.l4b1,kq9.l4b1,kq8.l4b1,kq7.l4b1,kq6.l4b1,kq5.l4b1,kq5.r4b1,kq6.r4b1,kq7.r4b1,kq8.r4b1,kq9.r4b1,kq10.r4b1,kqtl11.r4b1,kqt12.r4b1,kqt13.r4b1;
value,tarir4b1;

!muxip4b1=2.1600 ;betxip4b1 = 172.807960 ;alfxip4b1 =  0.580679 ;
!muyip4b1=1.7200 ;betyip4b1 = 230.297901 ;alfyip4b1 = -0.325498 ;
!dxip4b1 = 0.0000 ;dpxip4b1 = 0.0000 ;
!constraint, sequence=lhcb1, range=mqm.7r4.b1 ,bety<1265;
!constraint, sequence=lhcb1, range=mqy.6l4.b1,bety<1620;
!strategy for 11->22 :block the right and kqt12.r4b1 till 0.82/0.82, then kqt13.r4b1 till 0.5/0.5 with disp, beta and alpha as injection
!strategy for 22->28 : block the right and kqt13.r4b1  with disp, beta and alpha as injection
!strategy for 22->82 : all blocking kq8.r4b1 at some point and avoiding too small kq7.r4b1 by decreasing betxIP4 by 23 %


!Option, -echo,-warn,-info;

return;



