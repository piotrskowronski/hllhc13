scale = 23348.89927;
scmin := 0.03*7000./nrj;
sch=0.99;
qtlimit2 := sch*160.0/scale;
qtlimit3 := sch*200.0/scale;
qtlimit4 := sch*125.0/scale;
qtlimit5 := sch*120.0/scale;
qtlimit6 := sch*90.0/scale;


if(on_holdselect==0){ exec,select(6,56,67,b2); };

if(on_fixedip==1){
muxip6b2 = 2.0000 ;betxip6b2= 187.749224;alfxip6b2 = 0.551968;
muyip6b2 = 2.0300 ;betyip6b2= 178.368556;alfyip6b2 =-0.607183;
dxip6b2 =  0.0;dpxip6b2 = 0 ;!value HLLHCV1.0/HLLHCV1.1: dxip6b2 =  0.186;
};

value,muxip6b2,betxip6b2,alfxip6b2;
value,muyip6b2,betyip6b2,alfyip6b2;
value,dxip6b2,dpxip6b2;


value,refmuxip6b2-eir6b2->mux, refmuxip6b2, eir6b2->mux;
value,refmuyip6b2-eir6b2->muy, refmuyip6b2, eir6b2->muy;

!constants needed for calculation of the constraint 6 (2017) from Chiara
chi6_nsig = 10.1; 



chi6_dPoverP = 2e-4; 
chi6_emitx=2.5e-6/(7000/0.9382720814); 
chi6_maxorbitdrift = 1.2e-3;


!as closer to 500x500 make the betas at q4 and q5 smaller to fit injection constraint
scir1_scv = scxir1;
if (scxir1 > scyir1)
 {
   scir1_scv = scyir1;
 };

if ( scir1_scv < 0.8 )
 {
   print, text="skowron: flat squeeze q45_betmax = 1200;";
   q45_betmax = 1200;
   tcdqmr_betmax = 1200;
   tcdqml_betmax = 1200;
   tcdqml_muxmmin  = 1.05;
 }
else
 {
   q45_betmax = 677 + (1 - scir1_scv ) * 2500;
   print, text="skowron: flat squeeze q45_betmax = ";
   value, q45_betmax;

   tcdqmr_betmax = 603 + 1e-3 + (1 - scir1_scv ) * 2000;
   tcdqml_betmax = 590 + 1e-3 + (1 - scir1_scv ) * 2000;
   
   tcdqml_muxmmin  =  1.032 + (1 - scir1_scv ) * 0.018/0.8;
   
   chi6_nsig = 10.1 + 10*scir1_scv - 8 ;   
   
 }

if ( scir1_scv < 0.3 )
 { !when approaching 10cm (scir1_scv=0.2) add gradually 0.1*0.25 = +0.025
   tcdqml_muxmmin  = 1.05;!+ (0.3 - scir1_scv)*0.5 ;


 }
 
ini_kqt13.l6b2   =  kqt13.l6b2  ; 
ini_kqt12.l6b2   =  kqt12.l6b2  ;
ini_kqtl11.l6b2  =  kqtl11.l6b2 ;
ini_kq10.l6b2    =  kq10.l6b2   ;
ini_kq9.l6b2     =  kq9.l6b2    ;
ini_kq8.l6b2     =  kq8.l6b2    ;
ini_kq5.l6b2     =  kq5.l6b2    ;
ini_kq4.l6b2     =  kq4.l6b2    ;
ini_kq5.r6b2     =  kq5.r6b2    ;
ini_kq8.r6b2     =  kq8.r6b2    ;
ini_kq9.r6b2     =  kq9.r6b2    ;
ini_kq10.r6b2    =  kq10.r6b2   ;
ini_kqtl11.r6b2  =  kqtl11.r6b2 ;
ini_kqt12.r6b2   =  kqt12.r6b2  ;
ini_kqt13.r6b2   =  kqt13.r6b2  ;

maxkchange = 0.001;

maxtcdqmingapb2shift = 2e-4;
maxmuxkck_tcdq_shift = 4e-4;
maxmuxshift = 1e-10;
maxmuyshift = 1e-10;




use,sequence=lhcb2,range=s.ds.l6.b2/e.ds.r6.b2;
match,use_macro;
 vary,name=kqt13.l6b2,  step=1.0E-6, lower=-qtlimit5, upper= qtlimit5;
 vary,name=kqt12.l6b2,  step=1.0E-6, lower=-qtlimit5, upper= qtlimit5;
 vary,name=kqtl11.l6b2, step=1.0E-6, lower=-qtlimit4*400./550., upper=qtlimit4*400./550.;
 vary,name=kq10.l6b2,   step=1.0E-6, lower= qtlimit3*scmin, upper= qtlimit3;
 vary,name=kq9.l6b2,    step=1.0E-6, lower=-qtlimit3, upper=-qtlimit3*scmin;
 vary,name=kq8.l6b2,    step=1.0E-6, lower= qtlimit3*scmin, upper= qtlimit3;
 vary,name=kq5.l6b2,    step=1.0E-6, lower=-qtlimit3, upper=-qtlimit3*scmin;
 vary,name=kq4.l6b2,    step=1.0E-6, lower= qtlimit2*scmin, upper= qtlimit2;

!vary,name=kq4.r6b2,    step=1.0E-6, lower=-qtlimit2, upper=-qtlimit2*scmin;!fixed for septum
 vary,name=kq5.r6b2,    step=1.0E-6, lower= qtlimit2*scmin, upper= qtlimit2;
 vary,name=kq8.r6b2,    step=1.0E-6, lower=-qtlimit3, upper=-qtlimit3*scmin;
 vary,name=kq9.r6b2,    step=1.0E-6, lower= qtlimit3*scmin, upper= qtlimit3;
 vary,name=kq10.r6b2,   step=1.0E-6, lower=-qtlimit3, upper=-qtlimit3*scmin;
 vary,name=kqtl11.r6b2, step=1.0E-6, lower=-qtlimit4*300./550., upper=qtlimit4*300./550.;
 vary,name=kqt12.r6b2,  step=1.0E-6, lower=-qtlimit5, upper= qtlimit5;
 vary,name=kqt13.r6b2,  step=1.0E-6, lower=-qtlimit5, upper= qtlimit5;


 m:macro=
  {
   twiss,beta0=bir6b2;
   
   refbetxip6b2=table(twiss,IP6,betx); 
   refalfxip6b2=table(twiss,IP6,alfx);
   refbetyip6b2=table(twiss,IP6,bety); 
   refalfyip6b2=table(twiss,IP6,alfy);
   
   refdxip6b2=table(twiss,IP6,dx); 
   refdpxip6b2=table(twiss,IP6,dpx);
   refdmuxkickb2_tcsg=table(twiss,MKD.H5R6.B2,mux)-table(twiss,TCSP.A4L6.B2,mux);
   refdmuxkickb2_tcdq=table(twiss,MKD.H5R6.B2,mux)-table(twiss,TCDQA.C4L6.B2,mux);
   refdmuxkickb2=table(twiss,MKD.H5R6.B2,mux)-table(twiss,TCDQA.A4L6.B2,mux);
   
   refdxtcdqb2=table(twiss,TCDQA.A4L6.B2,dx);
   
   refdxq5r6b2=abs(table(twiss,MQY.5R6.B2,dx));
   refdxq4l6b2=abs(table(twiss,MQY.4L6.B2,dx));
   al_dump=761;
   refbxdumpb2=refbetxip6b2+2*al_dump*refalfxip6b2+
                         al_dump^2*(1+refalfxip6b2^2)/refbetxip6b2;
   refbydumpb2=refbetyip6b2+2*al_opt_100_400_400_100_v4.madxdump*refalfyip6b2+
                         al_dump^2*(1+refalfyip6b2^2)/refbetyip6b2;
   refbdumpb2=sqrt(refbxdumpb2*refbydumpb2);
   refdmuxkickb2_bds=table(twiss,MKD.O5R6.B2,mux);
   
   betxtcdqb2=table(twiss,TCDQA.A4L6.B2,betx);
   betytcdqb2=table(twiss,TCDQA.A4L6.B2,bety);

   tcdqmingapb2 =   chi6_nsig*sqrt(chi6_emitx*betxtcdqb2) 
                  - 3e-4  
                  - abs(refdxtcdqb2*chi6_dPoverP) 
                  - chi6_maxorbitdrift;
   
    muxIP6b2_scv=table(twiss,e.ds.r6.b2,mux);
    muyIP6b2_scv=table(twiss,e.ds.r6.b2,muy);
    
    
   refmuxip6b2=table(twiss,e.ds.r6.b2,mux)-eir6b2->mux;
   refmuyip6b2=table(twiss,e.ds.r6.b2,muy)-eir6b2->muy;
   refmuxip6b2_l =table(twiss,ip6,mux);
   refmuyip6b2_l =table(twiss,ip6,muy);
   refmuxip6b2_r =refmuxip6b2-refmuxip6b2_l;
   refmuyip6b2_r =refmuyip6b2-refmuyip6b2_l;
    
   
  };

  !!!!!!!!!!!!!!!!  QUAD LIMITS !!!!!!!!!!!!!!!

  constraint, weight=1e2, expr= kqt13.l6b2  > -0.995 * qtlimit5; 
  constraint, weight=1e2, expr= kqt12.l6b2  > -0.995 * qtlimit5; 
  constraint, weight=1e2, expr= kqtl11.l6b2 > -0.99 * qtlimit4*400./550.;
  constraint, weight=1e2, expr= kq10.l6b2   >  1.01 * qtlimit3*scmin; 
  constraint, weight=1e2, expr= kq9.l6b2    > -0.99 * qtlimit3; 
  constraint, weight=1e2, expr= kq8.l6b2    >  1.01 * qtlimit3*scmin;
  constraint, weight=1e2, expr= kq5.l6b2    > -0.99 * qtlimit3; 
  constraint, weight=1e2, expr= kq4.l6b2    >  1.005 * qtlimit2*scmin;

  constraint, weight=1e2, expr= kqt13.l6b2  <  0.995 * qtlimit5; 
  constraint, weight=1e2, expr= kqt12.l6b2  <  0.995 * qtlimit5; 
  constraint, weight=1e2, expr= kqtl11.l6b2 <  0.99 * qtlimit4*400./550.;
  constraint, weight=1e2, expr= kq10.l6b2   <  0.99 * qtlimit3;
  constraint, weight=1e2, expr= kq9.l6b2    < -1.01 * qtlimit3*scmin; 
  constraint, weight=1e2, expr= kq8.l6b2    <  0.99 * qtlimit3;
  constraint, weight=1e2, expr= kq5.l6b2    < -1.01 * qtlimit3*scmin; 
  constraint, weight=1e2, expr= kq4.l6b2    <  0.99 * qtlimit2;
  
  
  constraint, weight=1e2, expr= kq5.r6b2     >  1.01 *  qtlimit3*scmin;     
  constraint, weight=1e2, expr= kq8.r6b2     > -0.99 *  qtlimit3;           
  constraint, weight=1e2, expr= kq9.r6b2     >  1.01 *  qtlimit3*scmin;    
  constraint, weight=1e2, expr= kq10.r6b2    > -0.99 *  qtlimit3;     
  constraint, weight=1e2, expr= kqtl11.r6b2  > -0.99 *  qtlimit4*300./550.;
  constraint, weight=1e2, expr= kqt12.r6b2   > -0.999 *  qtlimit5;
  constraint, weight=1e2, expr= kqt13.r6b2   > -0.999 *  qtlimit5;

  constraint, weight=1e2, expr= kq5.r6b2     <  0.99 *  qtlimit3;     
  constraint, weight=1e2, expr= kq8.r6b2     < -1.01 *  qtlimit3*scmin;           
  constraint, weight=1e2, expr= kq9.r6b2     <  0.99 *  qtlimit3;    
  constraint, weight=1e2, expr= kq10.r6b2    < -1.01 *  qtlimit3*scmin;     
  constraint, weight=1e2, expr= kqtl11.r6b2  <  0.99 *  qtlimit4*300./550.;
  constraint, weight=1e2, expr= kqt12.r6b2   <  0.995 *  qtlimit5;
  constraint, weight=1e5, expr= kqt13.r6b2   <  0.995 *  qtlimit5;
  
  

  !!!!!!!!!!!!!!!!  MACHINE PROTECTION !!!!!!!!!!!!!!!

  if(match_on_mkd_tcsg>0 && abs(dmuxkickb2_tcsg)>0)
   {
     constraint,expr=refdmuxkickb2_tcsg=dmuxkickb2_tcsg;
   };
  else
  {
     !!!!!!!!!!!!!!!  C2  !!!!!!!!!!!!!!!!!!! 
     constraint,weight=1e1,expr= abs(refdmuxkickb2_tcdq-0.250) < 0.0111 + maxmuxkck_tcdq_shift;
  };

  !constraint,sequence=lhcb2,range=MKD.H5R6.B2,  betx>380;!380: nom. LHC optics, minimize kick(mkd)/sigma_x for asynch. dump
  !if(match_on_tcdq>0 && betxtcdqb2>0 && betytcdqb2>0){
  if(match_on_tcdq>0)
   {
     constraint,sequence=lhcb2,range=TCDQA.A4L6.B2,betx>160;!=betxtcdqb2;
     constraint,sequence=lhcb2,range=TCDQA.A4L6.B2,bety=betytcdqb2;
   };
   else
    {
     !!!!!!!!!!!! C3 !!!!!!!!!!!!!!!
     constraint, weight=1e-1,sequence=lhcb2,range=TCDSA.4R6.B2,bety>200;
     
     !!!!!!!!!!!!! C4 !!!!!!!!!!!!!!!
     constraint, weight=1e-1,sequence=lhcb2,range=TCDQA.A4L6.B2,bety>145;

     !!!!!!!!!!!!!!! C6 !!!!!!!!!!!!!!!!!

    ! constraint,weight=1e1,sequence=lhcb2,range=TCDQA.A4L6.B2,betx>750;

     constraint, weight=1e-1, expr= tcdqmingapb2 > 3e-3 - maxtcdqmingapb2shift ;
     
    !!!!!!!!!!!!!!! C8 !!!!!!!!!!!!!!!!!

!v8

    constraint, weight=1e-1, expr= table(twiss,TCDQA.A4L6.B2,mux) > tcdqml_muxmmin; ! was 1.05
    constraint, weight=1e-1, expr= table(twiss,TCDQA.A4L6.B2,mux) < 1.246;! 1.08+0.166 ; 

! v10
!    constraint, weight=1e1, expr= table(twiss,TCDQA.A4L6.B2,mux) > 1.10; 
!    constraint, weight=1e1, expr= table(twiss,TCDQA.A4L6.B2,mux) < 1.226;! 1.08+0.166 ; 
    
!    constraint, weight=1e1, expr= table(twiss,MKD.H5R6.B2,mux) < 1.05; !orginal 1.12

      
     
    };


 ! constraint,expr=refdmuxkickb2_bds=dmuxkickb2_bds;

  constraint,weight=1e2, sequence=lhcb2,range=e.ds.r6.b2,alfx=eir6b2->alfx,alfy=eir6b2->alfy;
  constraint,weight=1e2, sequence=lhcb2,range=e.ds.r6.b2,betx=eir6b2->betx,bety=eir6b2->bety;
  constraint,weight=1e2, sequence=lhcb2,range=e.ds.r6.b2,dx=eir6b2->dx,dpx=eir6b2->dpx;
  
  constraint, weight=1e2,sequence=lhcb2,range=e.ds.r6.b2,   mux=muxip6b2+eir6b2->mux;
  constraint, weight=1e2,sequence=lhcb2,range=e.ds.r6.b2,   muy=muyip6b2+eir6b2->muy;
  
!  constraint, weight=1e3, expr= table(twiss,e.ds.r6.b2,mux) < muxip6b2 + eir6b2->mux  + maxmuxshift;
!  constraint, weight=1e3, expr= table(twiss,e.ds.r6.b2,mux) > muxip6b2 + eir6b2->mux  - maxmuxshift;

!  constraint, weight=1e3, expr= table(twiss,e.ds.r6.b2,muy) < muyip6b2 + eir6b2->muy  + maxmuyshift;
!  constraint, weight=1e3, expr= table(twiss,e.ds.r6.b2,muy) > muyip6b2 + eir6b2->muy  - maxmuyshift;


  constraint, weight=1e-1, expr=table(twiss,MQY.5R6.B2,betx) < q45_betmax;
  constraint, weight=1e-1, expr=table(twiss,MQY.5R6.B2,bety) < q45_betmax;

  constraint, weight=1e-1, expr=table(twiss,MQY.4R6.B2,betx) < q45_betmax;
  constraint, weight=1e-1, expr=table(twiss,MQY.4R6.B2,bety) < q45_betmax;

  constraint, weight=1e-1, expr=table(twiss,MQY.5L6.B2,betx) < q45_betmax;
  constraint, weight=1e-1, expr=table(twiss,MQY.5L6.B2,bety) < q45_betmax;

  constraint, weight=1e-1, expr=table(twiss,MQY.4L6.B2,betx) < q45_betmax;
  constraint, weight=1e-1, expr=table(twiss,MQY.4L6.B2,bety) < q45_betmax;



  constraint, weight=1e-1,sequence=lhcb2,range=tcdqm.b4r6.b2,bety < tcdqmr_betmax;
  constraint, weight=1e-1,sequence=lhcb2,range=tcdqm.b4l6.b2,betx < tcdqml_betmax;


  
  if (betir>0)
    {
        constraint,sequence=lhcb2,range=MQY.4L6.B2,   betx <betir;
        constraint,sequence=lhcb2,range=MQY.4R6.B2,   bety <betir;
        constraint,sequence=lhcb2,range=MQY.5L6.B2,   bety <betir;
        constraint,sequence=lhcb2,range=MQY.5R6.B2,   betx <betir;
        constraint,sequence=lhcb2,range=mqml.8l6.b2,  betx < betir;
        constraint,sequence=lhcb2,range=mqml.8r6.b2,  bety < betir;
        constraint,sequence=lhcb2,range=mqm.9l6.b2,   bety < betir;
        constraint,sequence=lhcb2,range=mqm.9r6.b2,   betx < betir;
        constraint,sequence=lhcb2,range=mqml.10l6.b2, betx < betir;
        constraint,sequence=lhcb2,range=mqml.10r6.b2, bety < betir;
    };
  
  if (betarc>0)
    {
        constraint,range=s.ds.l6.b2/e.ds.r6.b2, betx<betarc,bety<betarc;
    };
  
  if(match_on_aperture==1)
    {        
        constraint,range=mq.11l6.b2,bety< 173+epsap;
        !!constraint,range= mqml.10l6.b2,betx< 175.2+epsap;
        !!constraint,range=mqm.9l6.b2,bety< 180+epsap;
        constraint,range=MQY.5L6.B2,   bety<590  +7.2+2.5;
        constraint,range=MQY.4L6.B2,   betx<673  +2.0+2.5;
        constraint,range=MQY.4R6.B2,   bety<665  +2.0+2.5;
        constraint,range=MQY.5R6.B2,   betx<603.1+2.0+2.5;
        constraint,range= mcbv.12r6.b2,bety< 174.2+epsap;
        constraint,range= mqml.10r6.b2,bety< 176.6+epsap;
        !!constraint,range= mqml.10l6.b2,betx< 175.2+epsap;
    };


  if(match_on_dump>0)
   {
     constraint,expr=refbxdumpb2=bxdumpb2;
     constraint,expr=refbydumpb2=bydumpb2;
   };
  else
   {
     constraint,expr=refbxdumpb2>4000;
     constraint,expr=refbydumpb2>3200;
     constraint,expr=refbdumpb2>4500;
    };




  constraint, weight=1e2, expr= abs((ini_kqt13.l6b2   -  kqt13.l6b2  )/kqt13.l6b2  )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kqt12.l6b2   -  kqt12.l6b2  )/kqt12.l6b2  )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kqtl11.l6b2  -  kqtl11.l6b2 )/kqtl11.l6b2 )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq10.l6b2    -  kq10.l6b2   )/kq10.l6b2   )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq9.l6b2     -  kq9.l6b2    )/kq9.l6b2    )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq8.l6b2     -  kq8.l6b2    )/kq8.l6b2    )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq5.l6b2     -  kq5.l6b2    )/kq5.l6b2    )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq4.l6b2     -  kq4.l6b2    )/kq4.l6b2    )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq5.r6b2     -  kq5.r6b2    )/kq5.r6b2    )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq8.r6b2     -  kq8.r6b2    )/kq8.r6b2    )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq9.r6b2     -  kq9.r6b2    )/kq9.r6b2    )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kq10.r6b2    -  kq10.r6b2   )/kq10.r6b2   )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kqtl11.r6b2  -  kqtl11.r6b2 )/kqtl11.r6b2 )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kqt12.r6b2   -  kqt12.r6b2  )/kqt12.r6b2  )  < maxkchange;
  constraint, weight=1e2, expr= abs((ini_kqt13.r6b2   -  kqt13.r6b2  )/kqt13.r6b2  )  < maxkchange;




!  constraint, weight=1e1, expr = refmuxIP6b2_r = muxIP6b2_r;


!  jacobian,calls=0, tolerance=jac_tol, bisec=jac_bisec;

  lmdif,calls=500,tolerance=jac_tol;
  jacobian,calls=jac_calls, tolerance=jac_tol, bisec=jac_bisec;
  simplex,  calls=500, tolerance=1e-8;
  lmdif,calls=500,tolerance=jac_tol;
  jacobian,calls=jac_calls, tolerance=jac_tol, bisec=jac_bisec;
  lmdif,calls=500,tolerance=jac_tol;
  
endmatch;



exec,mk_irtwiss(6,b2);
dmuxkickb2_tcsg=table(twiss,MKD.H5R6.B2,mux)-table(twiss,TCSP.A4L6.B2,mux);
dmuxkickb2=table(twiss,MKD.H5R6.B2,mux)-table(twiss,TCDQA.A4L6.B2,mux);
betxtcdqb2=table(twiss,TCDQA.A4L6.B2,betx);betytcdqb2=table(twiss,TCDQA.A4L6.B2,bety);
betxtcdsb2=table(twiss,TCDSA.4R6.B2,betx);betytcdsb2=table(twiss,TCDSA.4R6.B2,bety);
betxtcsgb2=table(twiss,TCSP.A4L6.B2,betx);betytcsgb2=table(twiss,TCSP.A4L6.B2,bety);
betxmkdb2 =table(twiss,MKD.H5R6.B2,betx);  betymkdb2=table(twiss,MKD.H5R6.B2,bety);
dxq5r6b2=abs(table(twiss,MQY.5R6.B2,dx));
dxq4l6b2=abs(table(twiss,MQY.4L6.B2,dx));
bxdumpb2=refbxdumpb2;
bydumpb2=refbydumpb2;
value,kq4.r6b2+0.004833837730000;
value,betxtcdqb2,betytcdqb2,betxtcdsb2,betytcdsb2,betxtcsgb2,betytcsgb2;
value,dmuxkickb2;
value,refbxdumpb2,refbydumpb2,refbdumpb2;
value,refdmuxkickb2_bds;

value,refmuxip6b2-eir6b2->mux;
value,refmuyip6b2-eir6b2->muy;


tarir6b2=tar;
value,kqt13.l6b2,kqt12.l6b2,kqtl11.l6b2,kq10.l6b2,kq9.l6b2,kq8.l6b2,kq5.l6b2,kq4.l6b2,
kq4.r6b2,kq5.r6b2,kq8.r6b2,kq9.r6b2,kq10.r6b2,kqtl11.r6b2,kqt12.r6b2,kqt13.r6b2;
value,tarir6b2;

betxip6b2=refbetxip6b2 ;
betyip6b2=refbetyip6b2 ;
alfxip6b2=refalfxip6b2 ;
alfyip6b2=refalfyip6b2 ;
dxip6b2 =refdxip6b2 ;
dpxip6b2=refdpxip6b2 ;


value,kq5.l6b2*scale;
value,kq5.r6b2*scale;




!muxip6b2 = 2.0000 ;betxip6b2= 1.96000000E+02 ;alfxip6b2 = 5.98285418E-01  ;
!muyip6b2 = 2.0300 ;betyip6b2= 1.79082800E+02;alfyip6b2 =-5.41937487E-01 ;
!dxip6b2 =  1.74610979E-01;dpxip6b2 = 1.56146811E-03 ;
!strategy for 11->22 : use all (kq4.r6b2 fixed),alfas,dx as injection,dpx=0,betas not constrained
!strategy for 22->28 : use all (kq4.r6b2 fixed),alfas, dx as injection,dpx=0,betas not constrained
!strategy for 22->82 : use all (kq4.r6b2 fixed),alfas, dx as injection,dpx=0,betas not constrained (around 320/180)



return;


   

  !dispersion in straight section <0.5
  constraint,expr=refdxq5r6b2<0.9;
  constraint,expr=refdxq4l6b2<0.5;
  constraint,expr=refdxtcdqb2<0.6;




